name: Build Stella Mod

on:
  - push
  - pull_request

jobs:
  build-1-8-9:
    name: Build Stella 1.8.9 (Forge)
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{ github.run_number }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.1.1

      - name: Setup Java 21
        uses: actions/setup-java@v4.0.0
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.12.1

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build Stella for 1.8.9
        run: ./gradlew :forge1_8_9:clean :forge1_8_9:build

      - name: Rename and upload JAR
        run: |
          mkdir -p build/processed
          ORIGINAL_JAR=$(find forge1_8_9/build/libs -name "*.jar" | head -n 1)
          TARGET_JAR="build/processed/stella-1.8.9-forge-nightly-${BUILD_NUMBER}.jar"
          cp "$ORIGINAL_JAR" "$TARGET_JAR"
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4.3.0
        with:
          name: stella-1.8.9-forge-nightly-${{ github.run_number }}
          path: build/processed/stella-1.8.9-forge-nightly-${{ github.run_number }}.jar

  build-1-21-5:
    name: Build Stella 1.21.5 (Fabric)
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{ github.run_number }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.1.1

      - name: Setup Java 21
        uses: actions/setup-java@v4.0.0
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.12.1

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build Stella for 1.21.5
        run: ./gradlew :fabric1_21_5:clean :fabric1_21_5:build

      - name: Rename and upload JAR
        run: |
          mkdir -p build/processed
          ORIGINAL_JAR=$(find fabric1_21_5/build/libs -name "*.jar" | head -n 1)
          TARGET_JAR="build/processed/stella-1.21.5-fabric-nightly-${BUILD_NUMBER}.jar"
          cp "$ORIGINAL_JAR" "$TARGET_JAR"
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4.3.0
        with:
          name: stella-1.21.5-fabric-nightly-${{ github.run_number }}
          path: build/processed/stella-1.21.5-fabric-nightly-${{ github.run_number }}.jar

  # send-to-discord:
  #   if: github.event_name == 'push'
  #   needs: [build-1-8-9, build-1-21-5]
  #   runs-on: ubuntu-latest
  #   env:
  #     DISCORD_WEBHOOK_URL: ${{ secrets.WEBHOOK }}
  #     BUILD_NUMBER: ${{ github.run_number }}
  #   steps:
  #     - name: Checkout source
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v4.1.7
  #       with:
  #         path: ./artifact
  #
  #     - name: Send jars to Discord
  #       run: |
  #         COMMIT_MESSAGE=$(git log -1 --pretty=%s)
  #         COMMIT_HASH=$(git rev-parse --short HEAD)
  #         COMMIT_URL="https://github.com/${{ github.repository }}/commit/${COMMIT_HASH}"
  #
  #         for jar in ./artifact/*.jar; do
  #           if [[ -f "$jar" ]]; then
  #             version=$(echo "$jar" | grep -o '1\.[0-9]\+\.[0-9]\+')
  #             EMBED_PAYLOAD=$(jq -n \
  #               --arg title "Stella $version nightly build" \
  #               --arg desc "[Commit: $COMMIT_MESSAGE]($COMMIT_URL)" \
  #               '{embeds: [{title: $title, description: $desc, color: 5814783}]}')
  #
  #             curl -X POST \
  #               -H "Content-Type: multipart/form-data" \
  #               -F "payload_json=${EMBED_PAYLOAD}" \
  #               -F "file=@${jar}" \
  #               "$DISCORD_WEBHOOK_URL"
  #           fi
  #         done
